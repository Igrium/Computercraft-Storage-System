-- API for dealing with accessing things from the master database
-- Local wrapper for now. Will use Rednet in the future.
os.loadAPI("chest")

-- Gets the corridors on the X axis the turtle can move along
function getXCorridors()
	return {1243,1237,1231}
end

-- Gets the corridors on the Z axis the turtle can move along
function getZCorridors()
	return {-446,-440,-435}
end

-- Returns the coordinates for the bounds of the room
function getRoomExtents()
	return {['x1']=-446, ['x2']=-435, ['y1']=56, ['y2']=100, ['z1']=1231, ['z2']=1243}
end

-- Returns a list of all the chests
function getStorageArrangement()
	local chest1 = chest.new({['name']="minecraft:dirt", ['damage']=0}, vector.new(-440, 56, 1234), "west")
	local chest2 = chest.new({['name']="minecraft:stone", ['damage']=0}, vector.new(-437, 56, 1237), "north")
	local backupChest = chest.new({['name']="any", ['damage']=0}, vector.new(-442, 56, 1243), "south")
	return {['1']=chest1,['2']=chest2, ['backupChest']=backupChest}
end

-- Returns a list of all the chests with an specific item type
function getItemLocations(item)
	locations = {}
	totalLocations = getStorageArrangement()
	
	-- If item description matches, add chest to locations table
	for k, v in pairs(totalLocations) do
		if v.itemInfo.name == item.name and v.itemInfo.damage == item.damage then
			locations[#locations+1] = v
		end
	end
	
	return locations
end